use crate :: enums :: quoted_subscription_change_option :: * ; mod quoted_subscription_coupon ; use quoted_subscription_coupon :: * ; mod quoted_subscription_discount ; use quoted_subscription_discount :: * ; mod quoted_subscription_subscription_item ; use quoted_subscription_subscription_item :: * ; mod quoted_subscription_item_tier ; use quoted_subscription_item_tier :: * ; mod quoted_subscription_quoted_contract_term ; use quoted_subscription_quoted_contract_term :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct QuotedSubscription { # [validate (max_length = 50)] pub id : String , pub start_date : Option < u64 > , pub trial_end : Option < u64 > , # [validate (minimum = 0)] pub remaining_billing_cycles : Option < i64 > , # [validate (max_length = 100)] pub po_number : Option < String > , # [validate (max_length = 33)] pub plan_quantity_in_decimal : Option < String > , # [validate (max_length = 39)] pub plan_unit_price_in_decimal : Option < String > , pub changes_scheduled_at : Option < u64 > , # [validate] pub change_option : Option < QuotedSubscriptionChangeOption > , # [validate (minimum = 1)] # [validate (maximum = 100)] pub contract_term_billing_cycle_on_renewal : Option < i64 > , # [validate] pub coupons : Vec < QuotedSubscriptionCoupon > , # [validate] pub discounts : Vec < QuotedSubscriptionDiscount > , # [validate] pub subscription_items : Vec < QuotedSubscriptionSubscriptionItem > , # [validate] pub item_tiers : Vec < QuotedSubscriptionItemTier > , # [validate] pub quoted_contract_term : Option < QuotedSubscriptionQuotedContractTerm > } impl QuotedSubscription { }