use crate :: enums :: discount_type :: * ; use crate :: enums :: discount_duration_type :: * ; use crate :: enums :: discount_period_unit :: * ; use crate :: enums :: discount_apply_on :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct Discount { # [validate (max_length = 50)] pub id : String , # [validate (max_length = 100)] pub invoice_name : Option < String > , # [validate] # [serde (default = "Discount::default_type")] pub r#type : DiscountType , pub percentage : Option < f64 > , # [validate (minimum = 0)] pub amount : Option < i64 > , # [validate (max_length = 3)] pub currency_code : Option < String > , # [validate] # [serde (default = "Discount::default_duration_type")] pub duration_type : DiscountDurationType , # [validate (minimum = 1)] pub period : Option < i64 > , # [validate] pub period_unit : Option < DiscountPeriodUnit > , pub included_in_mrr : bool , # [validate] pub apply_on : DiscountApplyOn , # [validate (max_length = 100)] pub item_price_id : Option < String > , pub created_at : u64 , pub apply_till : Option < u64 > , pub applied_count : Option < i64 > , # [validate (max_length = 100)] pub coupon_id : String , # [validate (minimum = 0)] pub index : i64 } impl Discount { fn default_type () -> DiscountType { DiscountType :: Percentage } fn default_duration_type () -> DiscountDurationType { DiscountDurationType :: Forever } }