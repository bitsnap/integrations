use crate :: enums :: promotional_credit_type :: * ; use crate :: enums :: promotional_credit_credit_type :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct PromotionalCredit { # [validate (max_length = 150)] pub id : String , # [validate (max_length = 50)] pub customer_id : String , # [validate] pub r#type : PromotionalCreditType , # [validate (max_length = 33)] pub amount_in_decimal : Option < String > , # [validate (minimum = 0)] pub amount : i64 , # [validate (max_length = 3)] pub currency_code : String , # [validate (max_length = 250)] pub description : String , # [validate] # [serde (default = "PromotionalCredit::default_credit_type")] pub credit_type : PromotionalCreditCreditType , # [validate (max_length = 500)] pub reference : Option < String > , # [validate (minimum = 0)] pub closing_balance : i64 , # [validate (max_length = 100)] pub done_by : Option < String > , pub created_at : u64 } impl PromotionalCredit { fn default_credit_type () -> PromotionalCreditCreditType { PromotionalCreditCreditType :: General } }