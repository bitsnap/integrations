use crate :: enums :: credit_note_type :: * ; use crate :: enums :: credit_note_reason_code :: * ; use crate :: enums :: credit_note_status :: * ; use crate :: enums :: credit_note_price_type :: * ; use crate :: enums :: credit_note_channel :: * ; mod credit_note_einvoice ; use credit_note_einvoice :: * ; mod credit_note_line_item ; use credit_note_line_item :: * ; mod credit_note_discount ; use credit_note_discount :: * ; mod credit_note_line_item_discount ; use credit_note_line_item_discount :: * ; mod credit_note_line_item_tier ; use credit_note_line_item_tier :: * ; mod credit_note_tax ; use credit_note_tax :: * ; mod credit_note_line_item_tax ; use credit_note_line_item_tax :: * ; mod credit_note_transaction ; use credit_note_transaction :: * ; mod credit_note_linked_tax_withheld_refund ; use credit_note_linked_tax_withheld_refund :: * ; mod credit_note_applied_credit ; use credit_note_applied_credit :: * ; mod credit_note_shipping_address ; use credit_note_shipping_address :: * ; mod credit_note_billing_address ; use credit_note_billing_address :: * ; mod credit_note_site_details_at_creation ; use credit_note_site_details_at_creation :: * ; mod credit_note_tax_origin ; use credit_note_tax_origin :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct CreditNote { # [validate (max_length = 50)] pub id : String , # [validate (max_length = 50)] pub customer_id : String , # [validate (max_length = 50)] pub subscription_id : Option < String > , # [validate (max_length = 50)] pub reference_invoice_id : Option < String > , # [validate] pub r#type : CreditNoteType , # [validate] pub reason_code : Option < CreditNoteReasonCode > , # [validate] pub status : CreditNoteStatus , # [validate (max_length = 20)] pub vat_number : Option < String > , pub date : Option < u64 > , # [validate] # [serde (default = "CreditNote::default_price_type")] pub price_type : CreditNotePriceType , # [validate (max_length = 3)] pub currency_code : String , # [validate (minimum = 0)] pub total : Option < i64 > , # [validate (minimum = 0)] pub amount_allocated : Option < i64 > , # [validate (minimum = 0)] pub amount_refunded : Option < i64 > , # [validate (minimum = 0)] pub amount_available : Option < i64 > , pub refunded_at : Option < u64 > , pub voided_at : Option < u64 > , pub generated_at : Option < u64 > , pub resource_version : Option < i64 > , pub updated_at : Option < u64 > , # [validate] pub channel : Option < CreditNoteChannel > , # [validate (minimum = 0)] pub sub_total : i64 , # [validate (minimum = 0)] pub sub_total_in_local_currency : Option < i64 > , # [validate (minimum = 0)] pub total_in_local_currency : Option < i64 > , # [validate (max_length = 3)] pub local_currency_code : Option < String > , # [validate (minimum = - 99)] # [validate (maximum = 99)] pub round_off_amount : Option < i64 > , # [validate (minimum = - 50000)] # [validate (maximum = 50000)] pub fractional_correction : Option < i64 > , pub deleted : bool , pub tax_category : Option < String > , pub local_currency_exchange_rate : Option < BigDecimal > , # [validate (max_length = 100)] pub create_reason_code : Option < String > , # [validate (max_length = 10)] pub vat_number_prefix : Option < String > , # [validate (max_length = 50)] pub business_entity_id : Option < String > , # [validate] pub einvoice : Option < CreditNoteEinvoice > , # [validate] pub line_items : Vec < CreditNoteLineItem > , # [validate] pub discounts : Vec < CreditNoteDiscount > , # [validate] pub line_item_discounts : Vec < CreditNoteLineItemDiscount > , # [validate] pub line_item_tiers : Vec < CreditNoteLineItemTier > , # [validate] pub taxes : Vec < CreditNoteTax > , # [validate] pub line_item_taxes : Vec < CreditNoteLineItemTax > , # [validate] pub linked_refunds : Vec < CreditNoteTransaction > , # [validate] pub linked_tax_withheld_refunds : Vec < CreditNoteLinkedTaxWithheldRefund > , # [validate] pub allocations : Vec < CreditNoteAppliedCredit > , # [validate] pub shipping_address : Option < CreditNoteShippingAddress > , # [validate] pub billing_address : Option < CreditNoteBillingAddress > , # [validate] pub site_details_at_creation : Option < CreditNoteSiteDetailsAtCreation > , # [validate] pub tax_origin : Option < CreditNoteTaxOrigin > } impl CreditNote { fn default_price_type () -> CreditNotePriceType { CreditNotePriceType :: TaxExclusive } }