use crate :: enums :: contract_term_status :: * ; use crate :: enums :: contract_term_action_at_term_end :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct ContractTerm { # [validate (max_length = 50)] pub id : String , # [validate] pub status : ContractTermStatus , pub contract_start : u64 , pub contract_end : u64 , # [validate (minimum = 0)] pub billing_cycle : i64 , # [validate] # [serde (default = "ContractTerm::default_action_at_term_end")] pub action_at_term_end : ContractTermActionAtTermEnd , # [validate (minimum = 0)] pub total_contract_value : i64 , # [validate (minimum = 0)] pub total_contract_value_before_tax : i64 , pub cancellation_cutoff_period : Option < i64 > , pub created_at : u64 , # [validate (max_length = 50)] pub subscription_id : String , # [validate (minimum = 0)] pub remaining_billing_cycles : Option < i64 > } impl ContractTerm { fn default_action_at_term_end () -> ContractTermActionAtTermEnd { ContractTermActionAtTermEnd :: Renew } }