use crate :: enums :: quote_status :: * ; use crate :: enums :: quote_operation_type :: * ; use crate :: enums :: quote_price_type :: * ; mod quote_line_item ; use quote_line_item :: * ; mod quote_discount ; use quote_discount :: * ; mod quote_line_item_discount ; use quote_line_item_discount :: * ; mod quote_tax ; use quote_tax :: * ; mod quote_line_item_tax ; use quote_line_item_tax :: * ; mod quote_line_item_tier ; use quote_line_item_tier :: * ; mod quote_shipping_address ; use quote_shipping_address :: * ; mod quote_billing_address ; use quote_billing_address :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct Quote { # [validate (max_length = 50)] pub id : String , # [validate (max_length = 100)] pub name : Option < String > , # [validate (max_length = 100)] pub po_number : Option < String > , # [validate (max_length = 50)] pub customer_id : String , # [validate (max_length = 50)] pub subscription_id : Option < String > , # [validate (max_length = 50)] pub invoice_id : Option < String > , # [validate] pub status : QuoteStatus , # [validate] pub operation_type : QuoteOperationType , # [validate (max_length = 20)] pub vat_number : Option < String > , # [validate] # [serde (default = "Quote::default_price_type")] pub price_type : QuotePriceType , pub valid_till : u64 , pub date : u64 , # [validate (minimum = 0)] pub total_payable : Option < i64 > , # [validate (minimum = 0)] pub charge_on_acceptance : Option < i64 > , # [validate (minimum = 0)] pub sub_total : i64 , # [validate (minimum = 0)] pub total : Option < i64 > , # [validate (minimum = 0)] pub credits_applied : Option < i64 > , # [validate (minimum = 0)] pub amount_paid : Option < i64 > , # [validate (minimum = 0)] pub amount_due : Option < i64 > , # [serde (default = "Quote::default_version")] pub version : Option < i64 > , pub resource_version : Option < i64 > , pub updated_at : Option < u64 > , # [validate (max_length = 10)] pub vat_number_prefix : Option < String > , pub tax_category : Option < String > , # [validate (max_length = 3)] pub currency_code : String , pub notes : Option < Vec < serde_json :: Value > > , pub contract_term_start : Option < u64 > , pub contract_term_end : Option < u64 > , # [validate (minimum = 0)] pub contract_term_termination_fee : Option < i64 > , # [validate (max_length = 50)] pub business_entity_id : Option < String > , pub deleted : bool , # [validate] pub line_items : Vec < QuoteLineItem > , # [validate] pub discounts : Vec < QuoteDiscount > , # [validate] pub line_item_discounts : Vec < QuoteLineItemDiscount > , # [validate] pub taxes : Vec < QuoteTax > , # [validate] pub line_item_taxes : Vec < QuoteLineItemTax > , # [validate] pub line_item_tiers : Vec < QuoteLineItemTier > , # [validate] pub shipping_address : Option < QuoteShippingAddress > , # [validate] pub billing_address : Option < QuoteBillingAddress > } impl Quote { fn default_price_type () -> QuotePriceType { QuotePriceType :: TaxExclusive } fn default_version () -> Option < i64 > { Some (1) } }