use crate :: enums :: order_status :: * ; use crate :: enums :: order_cancellation_reason :: * ; use crate :: enums :: order_payment_status :: * ; use crate :: enums :: order_type :: * ; use crate :: enums :: order_price_type :: * ; use crate :: enums :: order_resent_status :: * ; mod order_line_item ; use order_line_item :: * ; mod order_shipping_address ; use order_shipping_address :: * ; mod order_billing_address ; use order_billing_address :: * ; mod order_line_item_tax ; use order_line_item_tax :: * ; mod order_line_item_discount ; use order_line_item_discount :: * ; mod order_line_item_linked_credit ; use order_line_item_linked_credit :: * ; mod order_resent_order ; use order_resent_order :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct Order { # [validate (max_length = 40)] pub id : String , # [validate (max_length = 50)] pub document_number : Option < String > , # [validate (max_length = 50)] pub invoice_id : Option < String > , # [validate (max_length = 50)] pub subscription_id : Option < String > , # [validate (max_length = 50)] pub customer_id : Option < String > , # [validate] # [serde (default = "Order::default_status")] pub status : Option < OrderStatus > , # [validate] pub cancellation_reason : Option < OrderCancellationReason > , # [validate] pub payment_status : Option < OrderPaymentStatus > , # [validate] pub order_type : Option < OrderType > , # [validate] # [serde (default = "Order::default_price_type")] pub price_type : OrderPriceType , # [validate (max_length = 50)] pub reference_id : Option < String > , # [validate (max_length = 50)] pub fulfillment_status : Option < String > , pub order_date : Option < u64 > , pub shipping_date : Option < u64 > , # [validate (max_length = 600)] pub note : Option < String > , # [validate (max_length = 50)] pub tracking_id : Option < String > , # [validate (max_length = 255)] pub tracking_url : Option < String > , # [validate (max_length = 50)] pub batch_id : Option < String > , # [validate (max_length = 50)] pub created_by : Option < String > , # [validate (max_length = 50)] pub shipment_carrier : Option < String > , # [validate (minimum = 0)] pub invoice_round_off_amount : Option < i64 > , # [validate (minimum = 0)] pub tax : Option < i64 > , # [validate (minimum = 0)] pub amount_paid : Option < i64 > , # [validate (minimum = 0)] pub amount_adjusted : Option < i64 > , # [validate (minimum = 0)] pub refundable_credits_issued : Option < i64 > , # [validate (minimum = 0)] pub refundable_credits : Option < i64 > , pub rounding_adjustement : Option < i64 > , pub paid_on : Option < u64 > , pub shipping_cut_off_date : Option < u64 > , pub created_at : u64 , pub status_update_at : Option < u64 > , pub delivered_at : Option < u64 > , pub shipped_at : Option < u64 > , pub resource_version : Option < i64 > , pub updated_at : Option < u64 > , pub cancelled_at : Option < u64 > , # [validate] pub resent_status : Option < OrderResentStatus > , pub is_resent : bool , # [validate (max_length = 40)] pub original_order_id : Option < String > , # [validate (minimum = 0)] pub discount : Option < i64 > , # [validate (minimum = 0)] pub sub_total : Option < i64 > , # [validate (minimum = 0)] pub total : Option < i64 > , pub deleted : bool , # [validate (max_length = 3)] pub currency_code : Option < String > , pub is_gifted : Option < bool > , # [validate (max_length = 500)] pub gift_note : Option < String > , # [validate (max_length = 50)] pub gift_id : Option < String > , # [validate (max_length = 100)] pub resend_reason : Option < String > , # [validate (max_length = 50)] pub business_entity_id : Option < String > , # [validate] pub order_line_items : Vec < OrderLineItem > , # [validate] pub shipping_address : Option < OrderShippingAddress > , # [validate] pub billing_address : Option < OrderBillingAddress > , # [validate] pub line_item_taxes : Vec < OrderLineItemTax > , # [validate] pub line_item_discounts : Vec < OrderLineItemDiscount > , # [validate] pub linked_credit_notes : Vec < OrderLineItemLinkedCredit > , # [validate] pub resent_orders : Vec < OrderResentOrder > } impl Order { fn default_status () -> Option < OrderStatus > { Some (OrderStatus :: New) } fn default_price_type () -> OrderPriceType { OrderPriceType :: TaxExclusive } }