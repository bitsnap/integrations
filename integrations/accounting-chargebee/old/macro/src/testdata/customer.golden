use crate :: enums :: customer_auto_collection :: * ; use crate :: enums :: customer_offline_payment_method :: * ; use crate :: enums :: customer_vat_number_status :: * ; use crate :: enums :: customer_taxability :: * ; use crate :: enums :: customer_entity_code :: * ; use crate :: enums :: customer_billing_date_mode :: * ; use crate :: enums :: customer_billing_day_of_week :: * ; use crate :: enums :: customer_billing_day_of_week_mode :: * ; use crate :: enums :: customer_pii_cleared :: * ; use crate :: enums :: customer_channel :: * ; use crate :: enums :: customer_fraud_flag :: * ; use crate :: enums :: customer_einvoicing_method :: * ; use crate :: enums :: customer_type :: * ; mod customer_billing_address ; use customer_billing_address :: * ; mod customer_referral_url ; use customer_referral_url :: * ; mod customer_contact ; use customer_contact :: * ; mod customer_payment_method ; use customer_payment_method :: * ; mod customer_balance ; use customer_balance :: * ; mod customer_entity_identifier ; use customer_entity_identifier :: * ; mod customer_tax_providers_field ; use customer_tax_providers_field :: * ; mod customer_relationship ; use customer_relationship :: * ; mod customer_parent_account_access ; use customer_parent_account_access :: * ; mod customer_child_account_access ; use customer_child_account_access :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct Customer { # [validate (max_length = 50)] pub id : String , # [validate (max_length = 150)] pub first_name : Option < String > , # [validate (max_length = 150)] pub last_name : Option < String > , # [validate (max_length = 70)] pub email : Option < String > , # [validate (max_length = 50)] pub phone : Option < String > , # [validate (max_length = 250)] pub company : Option < String > , # [validate (max_length = 20)] pub vat_number : Option < String > , # [validate] # [serde (default = "Customer::default_auto_collection")] pub auto_collection : CustomerAutoCollection , # [validate] pub offline_payment_method : Option < CustomerOfflinePaymentMethod > , pub net_term_days : i64 , pub vat_number_validated_time : Option < u64 > , # [validate] pub vat_number_status : Option < CustomerVatNumberStatus > , pub allow_direct_debit : bool , pub is_location_valid : Option < bool > , pub created_at : u64 , # [validate (max_length = 50)] pub created_from_ip : Option < String > , pub exemption_details : Option < Vec < serde_json :: Value > > , # [validate] # [serde (default = "Customer::default_taxability")] pub taxability : Option < CustomerTaxability > , # [validate] pub entity_code : Option < CustomerEntityCode > , # [validate (max_length = 100)] pub exempt_number : Option < String > , pub resource_version : Option < i64 > , pub updated_at : Option < u64 > , # [validate (max_length = 50)] pub locale : Option < String > , # [validate (minimum = 1)] # [validate (maximum = 31)] pub billing_date : Option < i64 > , # [validate (minimum = 1)] # [validate (maximum = 12)] pub billing_month : Option < i64 > , # [validate] pub billing_date_mode : Option < CustomerBillingDateMode > , # [validate] pub billing_day_of_week : Option < CustomerBillingDayOfWeek > , # [validate] pub billing_day_of_week_mode : Option < CustomerBillingDayOfWeekMode > , # [validate] # [serde (default = "Customer::default_pii_cleared")] pub pii_cleared : Option < CustomerPiiCleared > , pub auto_close_invoices : Option < bool > , # [validate] pub channel : Option < CustomerChannel > , # [validate (max_length = 50)] pub active_id : Option < String > , # [validate] pub fraud_flag : Option < CustomerFraudFlag > , # [validate (max_length = 40)] pub primary_payment_source_id : Option < String > , # [validate (max_length = 40)] pub backup_payment_source_id : Option < String > , # [validate (max_length = 2000)] pub invoice_notes : Option < String > , # [validate (max_length = 50)] pub business_entity_id : Option < String > , # [validate (max_length = 3)] pub preferred_currency_code : Option < String > , # [validate (minimum = 0)] pub promotional_credits : i64 , # [validate (minimum = 0)] pub unbilled_charges : i64 , # [validate (minimum = 0)] pub refundable_credits : i64 , # [validate (minimum = 0)] pub excess_payments : i64 , pub is_einvoice_enabled : Option < bool > , # [validate] pub einvoicing_method : Option < CustomerEinvoicingMethod > , pub meta_data : Option < serde_json :: Value > , pub deleted : bool , pub registered_for_gst : Option < bool > , pub consolidated_invoicing : Option < bool > , # [validate] pub customer_type : Option < CustomerType > , pub business_customer_without_vat_number : Option < bool > , # [validate (max_length = 50)] pub client_profile_id : Option < String > , # [serde (default = "Customer::default_use_default_hierarchy_settings")] pub use_default_hierarchy_settings : Option < bool > , # [validate (max_length = 10)] pub vat_number_prefix : Option < String > , # [validate (max_length = 50)] pub entity_identifier_scheme : Option < String > , # [validate (max_length = 50)] pub entity_identifier_standard : Option < String > , # [validate] pub billing_address : Option < CustomerBillingAddress > , # [validate] pub referral_urls : Vec < CustomerReferralUrl > , # [validate] pub contacts : Vec < CustomerContact > , # [validate] pub payment_method : Option < CustomerPaymentMethod > , # [validate] pub balances : Vec < CustomerBalance > , # [validate] pub entity_identifiers : Vec < CustomerEntityIdentifier > , # [validate] pub tax_providers_fields : Vec < CustomerTaxProvidersField > , # [validate] pub relationship : Option < CustomerRelationship > , # [validate] pub parent_account_access : Option < CustomerParentAccountAccess > , # [validate] pub child_account_access : Option < CustomerChildAccountAccess > } impl Customer { fn default_auto_collection () -> CustomerAutoCollection { CustomerAutoCollection :: On } fn default_taxability () -> Option < CustomerTaxability > { Some (CustomerTaxability :: Taxable) } fn default_pii_cleared () -> Option < CustomerPiiCleared > { Some (CustomerPiiCleared :: Active) } fn default_use_default_hierarchy_settings () -> Option < bool > { Some (true) } }