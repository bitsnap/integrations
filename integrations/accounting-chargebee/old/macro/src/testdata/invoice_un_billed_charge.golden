use crate :: enums :: invoice_un_billed_charge_pricing_model :: * ; use crate :: enums :: invoice_un_billed_charge_entity_type :: * ; mod invoice_un_billed_charge_line_item_tier ; use invoice_un_billed_charge_line_item_tier :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct InvoiceUnBilledCharge { # [validate (max_length = 40)] pub id : Option < String > , # [validate (max_length = 50)] pub customer_id : Option < String > , # [validate (max_length = 50)] pub subscription_id : Option < String > , pub date_from : Option < u64 > , pub date_to : Option < u64 > , # [validate (minimum = 0)] pub unit_amount : Option < i64 > , # [validate] pub pricing_model : Option < InvoiceUnBilledChargePricingModel > , # [validate (minimum = 0)] pub quantity : Option < i64 > , # [validate (minimum = 0)] pub amount : Option < i64 > , # [validate (max_length = 3)] pub currency_code : String , # [validate (minimum = 0)] pub discount_amount : Option < i64 > , # [validate (max_length = 250)] pub description : Option < String > , # [validate] pub entity_type : InvoiceUnBilledChargeEntityType , # [validate (max_length = 100)] pub entity_id : Option < String > , pub is_voided : bool , pub voided_at : Option < u64 > , # [validate (max_length = 39)] pub unit_amount_in_decimal : Option < String > , # [validate (max_length = 33)] pub quantity_in_decimal : Option < String > , # [validate (max_length = 39)] pub amount_in_decimal : Option < String > , pub updated_at : u64 , pub is_advance_charge : Option < bool > , # [validate (max_length = 50)] pub business_entity_id : Option < String > , pub deleted : bool , # [validate] pub tiers : Vec < InvoiceUnBilledChargeLineItemTier > } impl InvoiceUnBilledCharge { }