use crate :: enums :: event_source :: * ; use crate :: enums :: event_type :: * ; use crate :: enums :: event_api_version :: * ; mod event_webhook ; use event_webhook :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct Event { # [validate (max_length = 40)] pub id : String , pub occurred_at : u64 , # [validate] # [serde (default = "Event::default_source")] pub source : EventSource , # [validate (max_length = 150)] pub user : Option < String > , # [validate] pub event_type : Option < EventType > , # [validate] # [serde (default = "Event::default_api_version")] pub api_version : Option < EventApiVersion > , pub content : serde_json :: Value , pub origin_user : Option < String > , # [validate] pub webhooks : Vec < EventWebhook > } impl Event { fn default_source () -> EventSource { EventSource :: None } fn default_api_version () -> Option < EventApiVersion > { Some (EventApiVersion :: V1) } }