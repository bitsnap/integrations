use crate :: enums :: quote_line_group_charge_event :: * ; mod quote_line_group_line_item ; use quote_line_group_line_item :: * ; mod quote_line_group_discount ; use quote_line_group_discount :: * ; mod quote_line_group_line_item_discount ; use quote_line_group_line_item_discount :: * ; mod quote_line_group_tax ; use quote_line_group_tax :: * ; mod quote_line_group_line_item_tax ; use quote_line_group_line_item_tax :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct QuoteLineGroup { # [serde (default = "QuoteLineGroup::default_version")] pub version : Option < i64 > , # [validate (max_length = 40)] pub id : Option < String > , # [validate (minimum = 0)] pub sub_total : i64 , # [validate (minimum = 0)] pub total : Option < i64 > , # [validate (minimum = 0)] pub credits_applied : Option < i64 > , # [validate (minimum = 0)] pub amount_paid : Option < i64 > , # [validate (minimum = 0)] pub amount_due : Option < i64 > , # [validate] pub charge_event : Option < QuoteLineGroupChargeEvent > , pub billing_cycle_number : Option < i64 > , # [validate] pub line_items : Vec < QuoteLineGroupLineItem > , # [validate] pub discounts : Vec < QuoteLineGroupDiscount > , # [validate] pub line_item_discounts : Vec < QuoteLineGroupLineItemDiscount > , # [validate] pub taxes : Vec < QuoteLineGroupTax > , # [validate] pub line_item_taxes : Vec < QuoteLineGroupLineItemTax > } impl QuoteLineGroup { fn default_version () -> Option < i64 > { Some (1) } }