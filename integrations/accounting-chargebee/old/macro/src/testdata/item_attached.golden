use crate :: enums :: item_attached_type :: * ; use crate :: enums :: item_attached_status :: * ; use crate :: enums :: item_attached_charge_on_event :: * ; use crate :: enums :: item_attached_channel :: * ; # [derive (Default , Debug , Clone , Serialize , Deserialize , Validate)] # [serde (rename_all = "snake_case")] pub struct ItemAttached { # [validate (max_length = 100)] pub id : String , # [validate (max_length = 100)] pub parent_item_id : String , # [validate (max_length = 100)] pub item_id : String , # [validate] pub r#type : ItemAttachedType , # [validate] pub status : Option < ItemAttachedStatus > , # [validate (minimum = 1)] pub quantity : Option < i64 > , # [validate (max_length = 33)] pub quantity_in_decimal : Option < String > , # [validate (minimum = 1)] pub billing_cycles : Option < i64 > , # [validate] pub charge_on_event : ItemAttachedChargeOnEvent , pub charge_once : bool , pub created_at : u64 , pub resource_version : Option < i64 > , pub updated_at : Option < u64 > , # [validate] pub channel : Option < ItemAttachedChannel > , # [validate (max_length = 50)] pub business_entity_id : Option < String > } impl ItemAttached { }